package module_6.sprint_planning.main;


import module_6.sprint_planning.main.tickets.Bug;
import module_6.sprint_planning.main.tickets.Ticket;
import module_6.sprint_planning.main.tickets.UserStory;

public class Sprint {
    /*
    üîπ timeCapacity ‚Äì –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Å—É–º–∞—Ä–Ω–∏–π —á–∞—Å, —è–∫–∏–π –º–æ–∂–Ω–∞ –≤–∏—Ç—Ä–∞—Ç–∏—Ç–∏ –Ω–∞ —Ç—ñ–∫–µ—Ç–∏.
    üîπ ticketLimit ‚Äì –æ–±–º–µ–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç—ñ–∫–µ—Ç—ñ–≤ —É —Å–ø—Ä–∏–Ω—Ç—ñ.
    üîπ tickets ‚Äì –º–∞—Å–∏–≤ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É, —â–æ –∑–±–µ—Ä—ñ–≥–∞—î —Ç—ñ–∫–µ—Ç–∏ (UserStory —ñ Bug).
    üîπ ticketCount ‚Äì –≤—ñ–¥—Å—Ç–µ–∂—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–¥–∞–Ω–∏—Ö —Ç—ñ–∫–µ—Ç—ñ–≤.
     */

    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∑–∞–≥–∞–ª—å–Ω–∞ –æ—Ü—ñ–Ω–∫–∞ —á–∞—Å—É (–≤ –≥–æ–¥–∏–Ω–∞—Ö), —è–∫—É –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ —Å–ø—Ä–∏–Ω—Ç
    private final int timeCapacity;

    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç—ñ–∫–µ—Ç—ñ–≤ —É —Å–ø—Ä–∏–Ω—Ç—ñ
    private final int ticketLimit;

    // –ú–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç—ñ–≤, –¥–æ–¥–∞–Ω–∏—Ö —É —Å–ø—Ä–∏–Ω—Ç
    private final Ticket[] tickets;

    // –ü–æ—Ç–æ—á–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç—ñ–∫–µ—Ç—ñ–≤ —É —Å–ø—Ä–∏–Ω—Ç—ñ
    private int ticketCount;

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —â–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –æ–±–º–µ–∂–µ–Ω–Ω—è –∑–∞ —á–∞—Å–æ–º —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ç—ñ–∫–µ—Ç—ñ–≤
    public Sprint(int capacity, int ticketsLimit) {
        this.timeCapacity = capacity;
        this.ticketLimit = ticketsLimit;
        this.tickets = new Ticket[ticketsLimit]; // –ú–∞—Å–∏–≤ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É
        this.ticketCount = 0;
    }

    // –î–æ–¥–∞—î —ñ—Å—Ç–æ—Ä—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (UserStory) —É —Å–ø—Ä–∏–Ω—Ç ||
    //–ß–∏ userStory != null —ñ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
    //–ß–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤–∂–µ –≤ —Å–ø—Ä–∏–Ω—Ç—ñ (isDependencyAccepted()).
    //–ß–∏ —î –º—ñ—Å—Ü–µ –≤ —Å–ø—Ä–∏–Ω—Ç—ñ (canAddTicket()).
    //üîπ –Ø–∫—â–æ –≤—Å—ñ —É–º–æ–≤–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ, –¥–æ–¥–∞—î UserStory —É tickets[].
    public boolean addUserStory(UserStory userStory) {
        if (userStory == null || userStory.isCompleted()) {
            return false;
        }
        for (UserStory userStory1 : userStory.getDependencies()) {
            if (!isDependencyAccepted(userStory1)) {
                return false;
            }
        }
        if (canAddTicket(userStory.getEstimate())) {
            return false;
        }
        tickets[ticketCount++] = userStory;
        return true;
    }

    // –î–æ–¥–∞—î –±–∞–≥ (Bug) —É —Å–ø—Ä–∏–Ω—Ç ||
    //üîπ –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —â–æ bugReport != null —ñ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π.
    //üîπ –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–Ω–∞ –π–æ–≥–æ –¥–æ–¥–∞—Ç–∏ –≤ —Å–ø—Ä–∏–Ω—Ç.
    //üîπ –Ø–∫—â–æ –≤—Å–µ –¥–æ–±—Ä–µ ‚Äì –¥–æ–¥–∞—î –±–∞–≥ —É –º–∞—Å–∏–≤ tickets[].
    public boolean addBug(Bug bugReport) {
        if (bugReport == null || bugReport.isCompleted()){
            return false;
        }
        if (canAddTicket(bugReport.getEstimate())){
            return false;
        }
        tickets[ticketCount++] = bugReport;
        return true;


    }

    // –ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É —Ç—ñ–∫–µ—Ç—ñ–≤ —É —Å–ø—Ä–∏–Ω—Ç—ñ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–º—ñ–Ω –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å–∏–≤—É
    //–°—Ç–≤–æ—Ä—é—î –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É —Ç—ñ–∫–µ—Ç—ñ–≤, —â–æ–± –∑–∞—Ö–∏—Å—Ç–∏—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ.
    //üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î System.arraycopy() –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
    public Ticket[] getTickets() {
        Ticket[] ticket = new Ticket[ticketCount];
        System.arraycopy(tickets, 0, ticket, 0, ticketCount);
        return ticket;
    }

    // –û–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É –æ—Ü—ñ–Ω–∫—É —á–∞—Å—É –¥–ª—è –≤—Å—ñ—Ö —Ç—ñ–∫–µ—Ç—ñ–≤ —É —Å–ø—Ä–∏–Ω—Ç—ñ
    // –ü—ñ–¥—Å—É–º–æ–≤—É—î estimate –≤—Å—ñ—Ö —Ç—ñ–∫–µ—Ç—ñ–≤ —É tickets[].
    //üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–Ω—è –ª—ñ–º—ñ—Ç—É —á–∞—Å—É
    public int getTotalEstimate() {
        int totalEstimate = 0;
        for (int i = 0; i < ticketCount; i++) {
            totalEstimate += tickets[i].getEstimate();
        }
        return totalEstimate;

    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ç—ñ–∫–µ—Ç, –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—é—á–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è —Å–ø—Ä–∏–Ω—Ç—É
    //–ß–∏ –ø–µ—Ä–µ–≤–∏—â—É—î—Ç—å—Å—è –ª—ñ–º—ñ—Ç —á–∞—Å—É timeCapacity
    //–ß–∏ –ø–µ—Ä–µ–≤–∏—â—É—î—Ç—å—Å—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç—ñ–∫–µ—Ç—ñ–≤ ticketLimit.
    //üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ø–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º UserStory —ñ Bug. ||
    private boolean canAddTicket(int estimate) {
        return (getTotalEstimate() + estimate > timeCapacity || ticketCount >= ticketLimit);
    }

    //–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –∑–∞–ª–µ–∂–Ω–∞ UserStory –≤–∂–µ –≤ —Å–ø—Ä–∏–Ω—Ç—ñ.
    //üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ addUserStory() –ø–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –±—É–ª–∞ –¥–∞–Ω–∞ –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å (UserStory) –≤–∂–µ –¥–æ–¥–∞–Ω–∞ —É —Å–ø—Ä–∏–Ω—Ç
    // –Ø–∫—â–æ –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –≤–∂–µ –≤ —Å–ø—Ä–∏–Ω—Ç—ñ ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ true
    // –Ü–Ω–∞–∫—à–µ ‚Äì false
    private boolean isDependencyAccepted(UserStory dependency) {
        for (int i = 0; i < ticketCount; i++) {
            if (tickets[i] instanceof UserStory && tickets[i].equals(dependency)) {
                return true;
            }
        }
        return false;
    }
}

//tickets[i] instanceof UserStory: –¶–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –æ–±'—î–∫—Ç tickets[i] –µ–∫–∑–µ–º–ø–ª—è—Ä–æ–º –∫–ª–∞—Å—É UserStory.
//–Ø–∫—â–æ —Ç–∞–∫, —Ü–µ –æ–∑–Ω–∞—á–∞—î, —â–æ —Ü–µ–π –∫–≤–∏—Ç–æ–∫ —î —ñ—Å—Ç–æ—Ä—ñ—î—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

//getTotalEstimate() + estimate > timeCapacity: –¶–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —Å—É–º–∞ –æ—Ü—ñ–Ω–æ–∫ –≤–∂–µ
//–ø—Ä–∏–π–Ω—è—Ç–∏—Ö –∫–≤–∏—Ç–∫—ñ–≤ (–æ—Ç—Ä–∏–º–∞–Ω–∞ –∑ getTotalEstimate()) –ø–ª—é—Å –æ—Ü—ñ–Ω–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–≤–∏—Ç–∫–∞ (estimate)
//–ø–µ—Ä–µ–≤–∏—â—É—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É —î–º–Ω—ñ—Å—Ç—å —á–∞—Å—É (timeCapacity). –Ø–∫—â–æ —Ü–µ —Ç–∞–∫, —Ç–æ –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∫–≤–∏—Ç–æ–∫ –Ω–µ
// –º–æ–∂–Ω–∞, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ –ø—Ä–∏–∑–≤–µ–¥–µ –¥–æ –ø–µ—Ä–µ–ø–æ–≤–Ω–µ–Ω–Ω—è.