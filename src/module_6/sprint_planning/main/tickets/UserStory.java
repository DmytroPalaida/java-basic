package module_6.sprint_planning.main.tickets;

import java.util.Arrays;

public class UserStory extends Ticket {

    // –ú–∞—Å–∏–≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, —Ç–æ–±—Ç–æ —ñ–Ω—à–∏—Ö UserStory, —è–∫—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ –ø–µ—Ä—à–∏–º–∏
    //üîπ Bug –∑–∞–≤–∂–¥–∏ –º–∞—î –±—É—Ç–∏ –ø—Ä–∏–≤'—è–∑–∞–Ω–∏–π –¥–æ —è–∫–æ—ó—Å—å UserStory.
    //üîπ –¶–µ –ø–æ–ª–µ final, —Ç–æ–º—É –π–æ–≥–æ –Ω–µ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è.
    private final UserStory[] dependencies;

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—É, —â–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä, –Ω–∞–∑–≤—É, –æ—Ü—ñ–Ω–∫—É —á–∞—Å—É —Ç–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    // Arrays.copyOf() —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç—ñ—î—ó –∂ –¥–æ–≤–∂–∏–Ω–∏ —Ç–∞ –∫–æ–ø—ñ—é—î –∑–Ω–∞—á–µ–Ω–Ω—è –∑ dependsOn.
    public UserStory(int id, String name, int estimate, UserStory... dependsOn) {
        super(id, name, estimate);
        // –†–æ–±–∏–º–æ –∫–æ–ø—ñ—é –ø–µ—Ä–µ–¥–∞–Ω–æ–≥–æ –º–∞—Å–∏–≤—É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–º—ñ–Ω–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å–∏–≤—É
        this.dependencies = Arrays.copyOf(dependsOn, dependsOn.length);
    }

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–µ—Ç–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç—É
    //–ú–µ—Ç–æ–¥ –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç–∏ (complete) UserStory, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—Å—ñ —ó—ó –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    // (dependencies) –≤–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ.
    //–ü–µ—Ä–µ–±–∏—Ä–∞—î –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ —É for-each —Ü–∏–∫–ª—ñ.
    //–Ø–∫—â–æ —Ö–æ—á–∞ –± –æ–¥–Ω–∞ –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –º–µ—Ç–æ–¥ –ø—Ä–æ—Å—Ç–æ return, —Ç–æ–±—Ç–æ –≤–∏—Ö–æ–¥–∏—Ç—å –±–µ–∑ –∑–º—ñ–Ω.
    //–Ø–∫—â–æ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ, –∑–º—ñ–Ω–Ω–∞ completed —Å—Ç–∞—î true.
    @Override
    public void complete() {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ
        for (UserStory dependency : dependencies) {
            if (!dependency.isCompleted()) {
                return;
            }
        }
        // –Ø–∫—â–æ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ, –ø–æ–∑–Ω–∞—á–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —è–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—É
        completed = true;
    }

    // –ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, —â–æ–± –∑–∞—Ö–∏—Å—Ç–∏—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
    //–ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π, –∞ –Ω–µ —Å–∞–º –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤.
    //–¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥ –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –∑–º—ñ–Ω: —è–∫—â–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ dependencies,
    // –π–æ–≥–æ –º–æ–∂–Ω–∞ –±—É–ª–æ –± –∑–º—ñ–Ω–∏—Ç–∏ –∑–∑–æ–≤–Ω—ñ.
    public UserStory[] getDependencies() {
        return Arrays.copyOf(dependencies, dependencies.length);
    }

    // –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–µ—Ç–æ–¥ toString(), —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–∫–æ–≤–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    @Override
    public String toString() {
        return "[US " + getId() + "] " + getName();
    }
}
